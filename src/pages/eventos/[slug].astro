---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import Button from "@/components/Button.astro";
import FeatureCard from "@/components/FeatureCard.astro";
import Tag from "@/components/Tag.astro";
import Layout from "@/layouts/Layout.astro";
import ScheduleCard from "@/components/ScheduleCard.astro";
import SpeakerCard from "@/components/SpeakerCard.astro";
import {
  Ticket,
  Share2,
  Calendar,
  Clock,
  Building,
  Users,
  ExternalLink,
  CircleCheckBig,
  Heart,
  MapPinned,
  MicVocal,
  NotebookText,
  Store,
} from "@lucide/astro";
import SharedButton from "@/components/react/SharedButton";

export async function getStaticPaths() {
  const events = await getCollection("events");
  return events.map((event) => ({
    params: { slug: event.id },
    props: { event },
  }));
}
const { event } = Astro.props;
const metadata = {
  title: `${event.data.name}`,
  description: `${event.data.shortDescription}`,
  image: "",
  url: `https://gdgica.com/eventos/${event.data.name}`,
};
---

<Layout {...metadata}>
  <section class="relative py-20">
    <span class="absolute inset-0 z-[1] bg-black/50"></span>
    <Image
      src={event.data.image || "/placeholder.svg"}
      alt={`Foto de evento ${event.data.name}`}
      class="absolute inset-0 h-full w-full object-cover object-center"
      width={1200}
      height={600}
    />
    <div class="relative z-[2] container">
      <div class="max-w-[768px]">
        <div class="mb-4 flex gap-2">
          {
            event.data.category && (
              <Tag
                label={event.data.category.label}
                type={event.data.category.type}
              />
            )
          }
          {
            event.data.status && (
              <Tag
                label={event.data.status.label}
                type={event.data.status.type}
              />
            )
          }
        </div>
        <h1 class="mb-4 text-4xl font-bold text-white lg:text-5xl">
          {event.data.name}
        </h1>
        <p class="mb-6 text-xl text-white">
          {event.data.shortDescription}
        </p>
        <div class="flex flex-col gap-4 md:flex-row">
          <Button
            variant="solid"
            href={event.data.registerFormLink}
            target="_blank"
          >
            <Ticket size={16} /> Registrarse Gratis
          </Button>
          <SharedButton
            client:only="react"
            title={event.data.name}
            eventDate={event.data.date}
            eventTime={event.data.time}
            eventLocation={event.data.location.name}
            eventDescription={event.data.shortDescription}
            eventType="DevFest"
            eventHashtags='["DevFest2025", "GDGIca", "TechEvent", "GoogleDeveloper"]'
            eventOrganization="Google Developer Group Ica"
          />
        </div>
      </div>
    </div>
  </section>
  <section class="bg-section py-20">
    <div class="container">
      <div
        class="grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4"
      >
        <FeatureCard className="text-center">
          <Calendar stroke-width={1.5} color="#2463EB" class="mx-auto mb-3" />
          <strong class="text-primary mb-2 font-semibold">Fecha</strong>
          <p class="text-secondary">{event.data.date}</p>
        </FeatureCard>
        <FeatureCard className="text-center">
          <Clock stroke-width={1.5} color="#EF4444" class="mx-auto mb-3" />
          <strong class="text-primary mb-2 font-semibold">Horario</strong>
          <p class="text-secondary">{event.data.time}</p>
        </FeatureCard>
        <FeatureCard className="text-center">
          <Building stroke-width={1.5} color="#16A34A" class="mx-auto mb-3" />
          <strong class="text-primary mb-2 font-semibold">Ubicación</strong>
          <p class="text-secondary">{event.data.location.name}</p>
        </FeatureCard>
        <FeatureCard className="text-center">
          <Users stroke-width={1.5} color="#EBB308" class="mx-auto mb-3" />
          <strong class="text-primary mb-2 font-semibold">Asistentes</strong>
          <p class="text-secondary">
            <span>{event.data.participants}</span>/<span
              >{event.data.maxParticipants}</span
            >
          </p>
        </FeatureCard>
      </div>
    </div>
  </section>
  <section class="py-12">
    <div class="container">
      <div class="flex flex-col gap-8 lg:flex-row">
        <div class="flex basis-8/12 flex-col gap-8">
          <!-- about -->
          <div class="border-gray-custom rounded-lg border p-6 shadow-sm">
            <h2 class="text-primary mb-6 text-2xl font-semibold">
              Acerca del Evento
            </h2>

            <p class="text-secondary">
              {event.data.largeDescription}
            </p>
          </div>
          <!-- agenda -->
          <div class="border-gray-custom rounded-lg border p-6 shadow-sm">
            <h2 class="text-primary mb-6 text-2xl font-semibold">Agenda</h2>
            {
              event.data.schedule.length > 0 ? (
                <div class="flex flex-col gap-4">
                  {event.data.schedule.map((item) => (
                    <ScheduleCard {...item} />
                  ))}
                </div>
              ) : (
                <div class="flex flex-col items-center justify-center gap-4 text-center text-gray-400">
                  <NotebookText size={48} stroke-width={1} />
                  <p>Nuestra agenda está en construcción. ¡Vuelve pronto!</p>
                </div>
              )
            }
          </div>
          <!-- speakers -->
          <div class="border-gray-custom rounded-lg border p-6 shadow-sm">
            <h2 class="text-primary mb-6 text-2xl font-semibold">Speakers</h2>
            {
              event.data.speakers.length > 0 ? (
                <div class="grid grid-cols-1 gap-8 sm:grid-cols-1 md:grid-cols-2">
                  {event.data.speakers.map((speaker) => (
                    <SpeakerCard {...speaker} />
                  ))}
                </div>
              ) : (
                <div class="flex flex-col items-center justify-center gap-4 text-center text-gray-400">
                  <MicVocal size={48} stroke-width={1} />
                  <p>
                    Pronto revelaremos a nuestros speakers invitados. ¡Estate
                    atento!
                  </p>
                </div>
              )
            }
          </div>
          <!-- sponsors -->
          <div class="border-gray-custom rounded-lg border p-6 shadow-sm">
            <h2 class="text-primary mb-6 text-2xl font-semibold">Sponsors</h2>
            {
              event.data.sponsors.length > 0 ? (
                <div class="grid grid-cols-2 gap-6 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5">
                  {event.data.sponsors.map((sponsor) => (
                    <div class="flex items-center justify-center rounded-lg border border-gray-100 bg-white p-4 shadow-sm transition-shadow duration-200 hover:shadow-md">
                      <Image
                        src={sponsor.image || "/placeholder.svg"}
                        width={100}
                        height={100}
                        class="h-16 w-auto max-w-[100px] object-contain sm:h-20 md:h-24"
                        alt={`Logo de ${sponsor.alt}`}
                      />
                    </div>
                  ))}
                </div>
              ) : (
                <div class="flex flex-col items-center justify-center gap-4 text-center text-gray-400">
                  <Store size={48} stroke-width={1} />
                  <p>
                    Estamos preparando una gran alianza de patrocinadores. ¡Muy
                    pronto!
                  </p>
                </div>
              )
            }
          </div>
        </div>
        <div class="flex flex-col gap-8 lg:basis-1/3">
          <!-- register -->
          <div class="border-gray-custom rounded-lg border p-6 shadow-sm">
            <h2 class="text-primary mb-6 text-2xl font-semibold">Registro</h2>
            <p class="text-google-green mb-2 text-center text-2xl font-bold">
              Gratuito
            </p>
            <p class="text-secondary mb-4 text-center">
              {event.data.maxParticipants - event.data.participants} lugares disponibles
            </p>
            <div class="flex flex-col gap-4">
              <Button variant="solid" href={event.data.registerFormLink}>
                <Ticket size={16} /> Registrarse Gratis
              </Button>
              <Button variant="outline" href="/"
                ><Share2 size={16} /> Compartir Evento
              </Button>
            </div>
          </div>
          <!-- requeriments -->
          <div class="border-gray-custom rounded-lg border p-6 shadow-sm">
            <h2 class="text-primary mb-6 text-2xl font-semibold">Requisitos</h2>
            <ul class="flex flex-col gap-2">
              {
                event.data.requirements.map((requeriment) => (
                  <li class="text-secondary flex items-center gap-3 text-sm">
                    <CircleCheckBig size={16} color="#16A34A" />
                    {requeriment}
                  </li>
                ))
              }
            </ul>
          </div>
          <!-- includes -->
          <div class="border-gray-custom rounded-lg border p-6 shadow-sm">
            <h2 class="text-primary mb-6 text-2xl font-semibold">Incluye</h2>
            <ul class="flex flex-col gap-2">
              {
                event.data.include.map((item) => (
                  <li class="text-secondary flex items-center gap-3 text-sm">
                    <Heart size={16} color="#EF4444" />
                    {item}
                  </li>
                ))
              }
            </ul>
          </div>
          <!-- technologies -->
          <div class="border-gray-custom rounded-lg border p-6 shadow-sm">
            <h2 class="text-primary mb-6 text-2xl font-semibold">
              Tecnologías
            </h2>
            <ul class="flex flex-wrap gap-2">
              {
                event.data.technologies.map((technology) => (
                  <li>
                    <Tag label={technology} />
                  </li>
                ))
              }
            </ul>
          </div>
          <!-- ubication -->
          <div class="border-gray-custom rounded-lg border p-6 shadow-sm">
            <h2 class="text-primary mb-6 text-2xl font-semibold">Ubicación</h2>
            <p class="text-primary font-semibold">{event.data.location.name}</p>
            <p class="text-secondary mb-3 text-sm">
              {event.data.location.direction}
            </p>
            <!-- is false -->
            {
              event.data.location.googleMapEmbed ? (
                <iframe
                  src={event.data.location.googleMapEmbed}
                  width="600"
                  height="450"
                  style="border:0;"
                  allowfullscreen=""
                  loading="lazy"
                  referrerpolicy="no-referrer-when-downgrade"
                  class="h-60 w-full"
                />
              ) : (
                <div class="flex h-32 items-center justify-center gap-2 rounded-lg bg-gray-100">
                  <MapPinned size={16} color="#4b5563" />
                  <span class="text-secondary">Mapa interactivo</span>
                </div>
              )
            }

            <p class="mt-3 grid">
              <Button
                variant="outline"
                target="_blank"
                href={event.data.location.googleMapLink}
                ><ExternalLink />Ver en Google Maps</Button
              >
            </p>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>
